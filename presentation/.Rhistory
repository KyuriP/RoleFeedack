getwd()
# simplified A
A <- matrix(c( .30, 0, 0, 0, 0, 0, 0, 0, 0,
.33, .30, .14, .15, 0, .13, 0, 0, .15,
0,  0, .30, .22, .23, 0, 0, 0, 0,
.21, 0, 0, .30, 0, 0, 0.12, 0, 0,
0, 0, 0, .17, .30, 0, 0, 0, 0,
0, .13, 0, 0, .15, .30, .2, .15, .22,
0, 0, 0, 0, 0, 0, .30, .17, 0,
0, 0, 0, 0, 0, 0, 0, .30, 0,
0, 0, 0, 0, 0, 0, 0, .3, 0.30), 9, 9, byrow = T)
rownames(A) <- colnames(A) <- c("anh", "sad", "slp", "ene", "app", "glt", "con", "mot", "sui")
# edge color matrix
A_col <- matrix(c( 1, 0, 0, 0, 0, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0,  0, 1, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 0, 0, 0, 0, 0,
0, 0, 0, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0, 0, 0, 0, 0, 0, 1, 0, 0,
0, 0, 0, 0, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 0, 0, 0, 1), 9, 9, byrow = T)
edgecol <- ifelse(A_col == 1, "#F5651C", "darkgray")
# for legend in the example network plot
Names <- c("anhedonia", "sadness", "sleep", "energy", "appetite", "guilty", "concentration", "motor", "suicidal")
# grouping str
# grp <- list(`feedback loop` = 2:6, `no feedback loop` = c(1,7:9))
grp <- list(`feedback loop` = c(2,6), `no feedback loop` = c(-2,-6))
# layout
manual_layout <- matrix(c( -1.00000000,-0.3697451,
-0.25362943,-0.4206165,
-0.86442347, 0.4941126,
-0.08080896, 0.3245454,
0.49177041, 0.9000000,
0.43942364,-0.1656119,
0.99799343, 0.2837986,
1.00000000,-0.7135021,
0.41570786,-1.0000000), 9, 2, byrow=T)
qgraph(A, theme = 'colorblind', groups = grp, color = c("white", "white"), nodeNames = Names, border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout)
## install packages
source("code/libraries.R")
# load packages
library(modelr)
library(dplyr)
library(purrr)
library(tidyr)
library(magrittr)
library(haven)
#library(psychonetrics)
library(bootnet)
library(rootSolve)
library(deSolve)
library(stringr)
# packages for plotting
library(ggplot2)
library(ggridges) # geom_ridges
library(PupillometryR) # geom_flat_violin
library(ggthemes)
library(ggpubr)
library(plot3D) # for 3d regression plane
library(ggExtra) # for adding marginal distributions
library(grid) # for adding the overarching facet title
library(gtable) # for adding the overarching facet title
library(patchwork)
library(qgraph)
# simplified A
A <- matrix(c( .30, 0, 0, 0, 0, 0, 0, 0, 0,
.33, .30, .14, .15, 0, .13, 0, 0, .15,
0,  0, .30, .22, .23, 0, 0, 0, 0,
.21, 0, 0, .30, 0, 0, 0.12, 0, 0,
0, 0, 0, .17, .30, 0, 0, 0, 0,
0, .13, 0, 0, .15, .30, .2, .15, .22,
0, 0, 0, 0, 0, 0, .30, .17, 0,
0, 0, 0, 0, 0, 0, 0, .30, 0,
0, 0, 0, 0, 0, 0, 0, .3, 0.30), 9, 9, byrow = T)
rownames(A) <- colnames(A) <- c("anh", "sad", "slp", "ene", "app", "glt", "con", "mot", "sui")
# edge color matrix
A_col <- matrix(c( 1, 0, 0, 0, 0, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0,  0, 1, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 0, 0, 0, 0, 0,
0, 0, 0, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0, 0, 0, 0, 0, 0, 1, 0, 0,
0, 0, 0, 0, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 0, 0, 0, 1), 9, 9, byrow = T)
edgecol <- ifelse(A_col == 1, "#F5651C", "darkgray")
# for legend in the example network plot
Names <- c("anhedonia", "sadness", "sleep", "energy", "appetite", "guilty", "concentration", "motor", "suicidal")
# grouping str
# grp <- list(`feedback loop` = 2:6, `no feedback loop` = c(1,7:9))
grp <- list(`feedback loop` = c(2,6), `no feedback loop` = c(-2,-6))
# layout
manual_layout <- matrix(c( -1.00000000,-0.3697451,
-0.25362943,-0.4206165,
-0.86442347, 0.4941126,
-0.08080896, 0.3245454,
0.49177041, 0.9000000,
0.43942364,-0.1656119,
0.99799343, 0.2837986,
1.00000000,-0.7135021,
0.41570786,-1.0000000), 9, 2, byrow=T)
qgraph(A, theme = 'colorblind', groups = grp, color = c("white", "white"), nodeNames = Names, border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout)
qgraph(A, theme = 'colorblind', groups = grp, color = c("white", "white"), border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout)
qgraph(A, theme = 'colorblind', groups = grp, color = c("white", "white"), border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", asize= 4, layout = manual_layout)
qgraph(A, theme = 'colorblind', color = c("white", "white"), border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", asize= 4, layout = manual_layout)
png(file = "toymodel-0.png", width=16, height=12, bg = 'transparent', family="Palatino")
qgraph(A, theme = 'colorblind', color = c("white", "white"), border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", asize= 4, layout = manual_layout)
dev.off()
getwd()
png(file = "toymodel-0.png", width=500, height=400, bg = 'transparent', family="Palatino")
qgraph(A, theme = 'colorblind', color = c("white", "white"), border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", asize= 4, layout = manual_layout)
dev.off()
png(file = "toymodel-0.png", width=500, height=500, bg = 'transparent', family="Palatino", dpi=700)
?png
png(file = "toymodel-0.png", width=500, height=500, bg = 'transparent', family="Palatino", res=700)
qgraph(A, theme = 'colorblind', color = c("white", "white"), border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", asize= 4, layout = manual_layout)
dev.off()
png(file = "toymodel-0.png", width=500, height=500, bg = 'transparent', family="Palatino", res=300)
qgraph(A, theme = 'colorblind', color = c("white", "white"), border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", asize= 4, layout = manual_layout)
dev.off()
png(file = "toymodel-0.png", width=5000, height=5000, bg = 'transparent', family="Palatino", res=300)
qgraph(A, theme = 'colorblind', color = c("white", "white"), border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", asize= 4, layout = manual_layout)
dev.off()
# simplified A
A <- matrix(c( .30, 0, 0, 0, 0, 0, 0, 0, 0,
.33, .30, .14, .15, 0, 0, 0, 0, .15,
0,  0, .30, .22, .23, 0, 0, 0, 0,
.21, 0, 0, .30, 0, 0, 0.12, 0, 0,
0, 0, 0, .17, .30, 0, 0, 0, 0,
0, .13, 0, 0, .15, .30, .2, .15, .22,
0, 0, 0, 0, 0, 0, .30, .17, 0,
0, 0, 0, 0, 0, 0, 0, .30, 0,
0, 0, 0, 0, 0, 0, 0, .3, 0.30), 9, 9, byrow = T)
rownames(A) <- colnames(A) <- c("anh", "sad", "slp", "ene", "app", "glt", "con", "mot", "sui")
# edge color matrix
A_col <- matrix(c( 1, 0, 0, 0, 0, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0,  0, 1, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 0, 0, 0, 0, 0,
0, 0, 0, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0, 0, 0, 0, 0, 0, 1, 0, 0,
0, 0, 0, 0, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 0, 0, 0, 1), 9, 9, byrow = T)
edgecol <- ifelse(A_col == 1, "#F5651C", "darkgray")
# for legend in the example network plot
Names <- c("anhedonia", "sadness", "sleep", "energy", "appetite", "guilty", "concentration", "motor", "suicidal")
# grouping str
# grp <- list(`feedback loop` = 2:6, `no feedback loop` = c(1,7:9))
grp <- list(`feedback loop` = c(2,6), `no feedback loop` = c(-2,-6))
# layout
manual_layout <- matrix(c( -1.00000000,-0.3697451,
-0.25362943,-0.4206165,
-0.86442347, 0.4941126,
-0.08080896, 0.3245454,
0.49177041, 0.9000000,
0.43942364,-0.1656119,
0.99799343, 0.2837986,
1.00000000,-0.7135021,
0.41570786,-1.0000000), 9, 2, byrow=T)
qgraph(A, theme = 'colorblind', color = c("white", "white"), border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", asize= 4, layout = manual_layout)
# simplified A
A <- matrix(c( .30, 0, 0, 0, 0, 0, 0, 0, 0,
.33, .30, .14, .15, 0, 0, 0, 0, .15,
0,  0, .30, .22, .23, 0, 0, 0, 0,
.21, 0, 0, .30, 0, 0, 0.12, 0, 0,
0, 0, 0, .17, .30, 0, 0, 0, 0,
0, .5, 0, 0, .15, .30, .2, .15, .22,
0, 0, 0, 0, 0, 0, .30, .17, 0,
0, 0, 0, 0, 0, 0, 0, .30, 0,
0, 0, 0, 0, 0, 0, 0, .3, 0.30), 9, 9, byrow = T)
rownames(A) <- colnames(A) <- c("anh", "sad", "slp", "ene", "app", "glt", "con", "mot", "sui")
# edge color matrix
A_col <- matrix(c( 1, 0, 0, 0, 0, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0,  0, 1, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 0, 0, 0, 0, 0,
0, 0, 0, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0, 0, 0, 0, 0, 0, 1, 0, 0,
0, 0, 0, 0, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 0, 0, 0, 1), 9, 9, byrow = T)
edgecol <- ifelse(A_col == 1, "#F5651C", "darkgray")
# for legend in the example network plot
Names <- c("anhedonia", "sadness", "sleep", "energy", "appetite", "guilty", "concentration", "motor", "suicidal")
# grouping str
# grp <- list(`feedback loop` = 2:6, `no feedback loop` = c(1,7:9))
grp <- list(`feedback loop` = c(2,6), `no feedback loop` = c(-2,-6))
# layout
manual_layout <- matrix(c( -1.00000000,-0.3697451,
-0.25362943,-0.4206165,
-0.86442347, 0.4941126,
-0.08080896, 0.3245454,
0.49177041, 0.9000000,
0.43942364,-0.1656119,
0.99799343, 0.2837986,
1.00000000,-0.7135021,
0.41570786,-1.0000000), 9, 2, byrow=T)
qgraph(A, theme = 'colorblind', color = c("white", "white"), border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", asize= 4, layout = manual_layout)
# simplified A
A <- matrix(c( .30, 0, 0, 0, 0, 0, 0, 0, 0,
.33, .30, .14, .15, 0, 0, 0, 0, .15,
0,  0, .30, .22, .23, 0, 0, 0, 0,
.21, 0, 0, .30, 0, 0, 0.12, 0, 0,
0, 0, 0, .17, .30, 0, 0, 0, 0,
0, .6, 0, 0, .15, .30, .2, .15, .22,
0, 0, 0, 0, 0, 0, .30, .17, 0,
0, 0, 0, 0, 0, 0, 0, .30, 0,
0, 0, 0, 0, 0, 0, 0, .3, 0.30), 9, 9, byrow = T)
rownames(A) <- colnames(A) <- c("anh", "sad", "slp", "ene", "app", "glt", "con", "mot", "sui")
# edge color matrix
A_col <- matrix(c( 1, 0, 0, 0, 0, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0,  0, 1, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 0, 0, 0, 0, 0,
0, 0, 0, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0, 0, 0, 0, 0, 0, 1, 0, 0,
0, 0, 0, 0, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 0, 0, 0, 1), 9, 9, byrow = T)
edgecol <- ifelse(A_col == 1, "#F5651C", "darkgray")
# for legend in the example network plot
Names <- c("anhedonia", "sadness", "sleep", "energy", "appetite", "guilty", "concentration", "motor", "suicidal")
# grouping str
# grp <- list(`feedback loop` = 2:6, `no feedback loop` = c(1,7:9))
grp <- list(`feedback loop` = c(2,6), `no feedback loop` = c(-2,-6))
# layout
manual_layout <- matrix(c( -1.00000000,-0.3697451,
-0.25362943,-0.4206165,
-0.86442347, 0.4941126,
-0.08080896, 0.3245454,
0.49177041, 0.9000000,
0.43942364,-0.1656119,
0.99799343, 0.2837986,
1.00000000,-0.7135021,
0.41570786,-1.0000000), 9, 2, byrow=T)
qgraph(A, theme = 'colorblind', color = c("white", "white"), border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", asize= 4, layout = manual_layout)
png(file = "toymodel-1.png", width=5000, height=5000, bg = 'transparent', family="Palatino", res=300)
qgraph(A, theme = 'colorblind', color = c("white", "white"), border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", asize= 4, layout = manual_layout)
dev.off()
# simplified A
A <- matrix(c( .30, 0, 0, 0, 0, 0, 0, 0, 0,
.33, .30, .14, .15, 0, 0.6, 0, 0, .15,
0,  0, .30, .22, .23, 0, 0, 0, 0,
.21, 0, 0, .30, 0, 0, 0.12, 0, 0,
0, 0, 0, .17, .30, 0, 0, 0, 0,
0, 0, 0, 0, .15, .30, .2, .15, .22,
0, 0, 0, 0, 0, 0, .30, .17, 0,
0, 0, 0, 0, 0, 0, 0, .30, 0,
0, 0, 0, 0, 0, 0, 0, .3, 0.30), 9, 9, byrow = T)
rownames(A) <- colnames(A) <- c("anh", "sad", "slp", "ene", "app", "glt", "con", "mot", "sui")
# edge color matrix
A_col <- matrix(c( 1, 0, 0, 0, 0, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0,  0, 1, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 0, 0, 0, 0, 0,
0, 0, 0, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0, 0, 0, 0, 0, 0, 1, 0, 0,
0, 0, 0, 0, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 0, 0, 0, 1), 9, 9, byrow = T)
edgecol <- ifelse(A_col == 1, "#F5651C", "darkgray")
# for legend in the example network plot
Names <- c("anhedonia", "sadness", "sleep", "energy", "appetite", "guilty", "concentration", "motor", "suicidal")
# grouping str
# grp <- list(`feedback loop` = 2:6, `no feedback loop` = c(1,7:9))
grp <- list(`feedback loop` = c(2,6), `no feedback loop` = c(-2,-6))
# layout
manual_layout <- matrix(c( -1.00000000,-0.3697451,
-0.25362943,-0.4206165,
-0.86442347, 0.4941126,
-0.08080896, 0.3245454,
0.49177041, 0.9000000,
0.43942364,-0.1656119,
0.99799343, 0.2837986,
1.00000000,-0.7135021,
0.41570786,-1.0000000), 9, 2, byrow=T)
png(file = "toymodel-2.png", width=5000, height=5000, bg = 'transparent', family="Palatino", res=300)
qgraph(A, theme = 'colorblind', color = c("white", "white"), border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", asize= 4, layout = manual_layout)
dev.off()
qgraph(A, theme = 'colorblind', color = c("white", "white"), border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", asize= 4, layout = manual_layout)
# simplified A
A <- matrix(c( .30, 0, 0, 0, 0, 0, 0, 0, 0,
.33, .30, .14, .15, 0, .13, 0, 0, .15,
0,  0, .30, .22, .23, 0, 0, 0, 0,
.21, 0, 0, .30, 0, 0, 0.12, 0, 0,
0, 0, 0, .17, .30, 0, 0, 0, 0,
0, .2, 0, 0, .15, .30, .2, .15, .22,
0, 0, 0, 0, 0, 0, .30, .17, 0,
0, 0, 0, 0, 0, 0, 0, .30, 0,
0, 0, 0, 0, 0, 0, 0, .3, 0.30), 9, 9, byrow = T)
rownames(A) <- colnames(A) <- c("anh", "sad", "slp", "ene", "app", "glt", "con", "mot", "sui")
# edge color matrix
A_col <- matrix(c( 1, 0, 0, 0, 0, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0,  0, 1, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 0, 0, 0, 0, 0,
0, 0, 0, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0, 0, 0, 0, 0, 0, 1, 0, 0,
0, 0, 0, 0, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 0, 0, 0, 1), 9, 9, byrow = T)
edgecol <- ifelse(A_col == 1, "#F5651C", "darkgray")
# for legend in the example network plot
Names <- c("anhedonia", "sadness", "sleep", "energy", "appetite", "guilty", "concentration", "motor", "suicidal")
# grouping str
# grp <- list(`feedback loop` = 2:6, `no feedback loop` = c(1,7:9))
grp <- list(`feedback loop` = c(2,6), `no feedback loop` = c(-2,-6))
qgraph(A, theme = 'colorblind', color = c("white", "white"), border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", asize= 4, layout = manual_layout)
A_binary <- ifelse(A != 0, 1, 0)
A_binary
# edge color matrix
A_col <- matrix(c( 1, 0, 0, 0, 0, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0,  0, 1, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 0, 0, 0, 0, 0,
0, 0, 0, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0, 0, 0, 0, 0, 0, 1, 0, 0,
0, 0, 0, 0, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 0, 0, 0, 1), 9, 9, byrow = T)
edgecol <- ifelse(A_col == 1, "#F5651C", "darkgray")
# for legend in the example network plot
Names <- c("anhedonia", "sadness", "sleep", "energy", "appetite", "guilty", "concentration", "motor", "suicidal")
# grouping str
# grp <- list(`feedback loop` = 2:6, `no feedback loop` = c(1,7:9))
grp <- list(`feedback loop` = c(2,6), `no feedback loop` = c(-2,-6))
# layout
manual_layout <- matrix(c( -1.00000000,-0.3697451,
-0.25362943,-0.4206165,
-0.86442347, 0.4941126,
-0.08080896, 0.3245454,
0.49177041, 0.9000000,
0.43942364,-0.1656119,
0.99799343, 0.2837986,
1.00000000,-0.7135021,
0.41570786,-1.0000000), 9, 2, byrow=T)
qgraph(A, theme = 'colorblind', groups = grp, color = c("white", "white"), nodeNames = Names, border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout)
qgraph(A, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout)
qgraph(A_binary, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout)
qgraph(A_binary, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 1, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout)
qgraph(A_binary, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 3, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout)
qgraph(A_binary, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 3, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 3, layout = manual_layout)
qgraph(A_binary, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 2.5, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 2, layout = manual_layout)
qgraph(A, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout)
qgraph(A, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout, fade = FALSE)
qgraph(A, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#f5971c", "darkgray", "darkgray", "darkgray", "#f5971c", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout, fade = FALSE)
qgraph(A, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout, fade = 0.5)
qgraph(A, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout, fade = FALSE)
# simplified A
A <- matrix(c( .30, 0, 0, 0, 0, 0, 0, 0, 0,
.33, .30, .14, .15, 0, .13, 0, 0, .15,
0,  0, .30, .22, .23, 0, 0, 0, 0,
.21, 0, 0, .30, 0, 0, 0.12, 0, 0,
0, 0, 0, .17, .30, 0, 0, 0, 0,
0, .13, 0, 0, .15, .30, .2, .15, .22,
0, 0, 0, 0, 0, 0, .30, .17, 0,
0, 0, 0, 0, 0, 0, 0, .30, 0,
0, 0, 0, 0, 0, 0, 0, .3, 0.30), 9, 9, byrow = T)
rownames(A) <- colnames(A) <- c("anh", "sad", "slp", "ene", "app", "glt", "con", "mot", "sui")
# edge color matrix
A_col <- matrix(c( 1, 0, 0, 0, 0, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0,  0, 1, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 0, 0, 0, 0, 0,
0, 0, 0, 0, 1, 0, 0, 0, 0,
0, 1, 0, 0, 0, 1, 0, 0, 0,
0, 0, 0, 0, 0, 0, 1, 0, 0,
0, 0, 0, 0, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 0, 0, 0, 1), 9, 9, byrow = T)
edgecol <- ifelse(A_col == 1, alpha("#F5651C", 0.8), "darkgray")
# for legend in the example network plot
Names <- c("anhedonia", "sadness", "sleep", "energy", "appetite", "guilty", "concentration", "motor", "suicidal")
# grouping str
# grp <- list(`feedback loop` = 2:6, `no feedback loop` = c(1,7:9))
grp <- list(`feedback loop` = c(2,6), `no feedback loop` = c(-2,-6))
# layout
manual_layout <- matrix(c( -1.00000000,-0.3697451,
-0.25362943,-0.4206165,
-0.86442347, 0.4941126,
-0.08080896, 0.3245454,
0.49177041, 0.9000000,
0.43942364,-0.1656119,
0.99799343, 0.2837986,
1.00000000,-0.7135021,
0.41570786,-1.0000000), 9, 2, byrow=T)
qgraph(A, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout, fade = FALSE)
edgecol <- ifelse(A_col == 1, alpha("#F5651C", 0.8), alpha("darkgray", 0.5))
# for legend in the example network plot
Names <- c("anhedonia", "sadness", "sleep", "energy", "appetite", "guilty", "concentration", "motor", "suicidal")
# grouping str
# grp <- list(`feedback loop` = 2:6, `no feedback loop` = c(1,7:9))
grp <- list(`feedback loop` = c(2,6), `no feedback loop` = c(-2,-6))
# layout
manual_layout <- matrix(c( -1.00000000,-0.3697451,
-0.25362943,-0.4206165,
-0.86442347, 0.4941126,
-0.08080896, 0.3245454,
0.49177041, 0.9000000,
0.43942364,-0.1656119,
0.99799343, 0.2837986,
1.00000000,-0.7135021,
0.41570786,-1.0000000), 9, 2, byrow=T)
png(file = "toymodel-0.pdf", width=5000, height=5000, bg = 'transparent', family="Palatino", res= 300)
qgraph(A, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout, fade = FALSE)
dev.off()
qgraph(A, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout, fade = FALSE)
png(file = "toymodel-0.png", width=5000, height=5000, bg = 'transparent', family="Palatino", res= 300)
qgraph(A, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout, fade = FALSE)
dev.off()
# simplified A
A <- matrix(c( .30, 0, 0, 0, 0, 0, 0, 0, 0,
.33, .30, .14, .15, 0, 0, 0, 0, .15,
0,  0, .30, .22, .23, 0, 0, 0, 0,
.21, 0, 0, .30, 0, 0, 0.12, 0, 0,
0, 0, 0, .17, .30, 0, 0, 0, 0,
0, .3, 0, 0, .15, .30, .2, .15, .22,
0, 0, 0, 0, 0, 0, .30, .17, 0,
0, 0, 0, 0, 0, 0, 0, .30, 0,
0, 0, 0, 0, 0, 0, 0, .3, 0.30), 9, 9, byrow = T)
rownames(A) <- colnames(A) <- c("anh", "sad", "slp", "ene", "app", "glt", "con", "mot", "sui")
qgraph(A, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout, fade = FALSE)
png(file = "toymodel-1.png", width=5000, height=5000, bg = 'transparent', family="Palatino", res= 300)
qgraph(A, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout, fade = FALSE)
dev.off()
# simplified A
A <- matrix(c( .30, 0, 0, 0, 0, 0, 0, 0, 0,
.33, .30, .14, .15, 0, .3, 0, 0, .15,
0,  0, .30, .22, .23, 0, 0, 0, 0,
.21, 0, 0, .30, 0, 0, 0.12, 0, 0,
0, 0, 0, .17, .30, 0, 0, 0, 0,
0, 0, 0, 0, .15, .30, .2, .15, .22,
0, 0, 0, 0, 0, 0, .30, .17, 0,
0, 0, 0, 0, 0, 0, 0, .30, 0,
0, 0, 0, 0, 0, 0, 0, .3, 0.30), 9, 9, byrow = T)
rownames(A) <- colnames(A) <- c("anh", "sad", "slp", "ene", "app", "glt", "con", "mot", "sui")
png(file = "toymodel-2.png", width=5000, height=5000, bg = 'transparent', family="Palatino", res= 300)
qgraph(A, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout, fade = FALSE)
dev.off()
qgraph(A, theme = 'colorblind', color = c("white", "white"),  border.color = c("darkgray", "#F5651C", "darkgray", "darkgray", "darkgray", "#F5651C", "darkgray", "darkgray", "darkgray"),border.width = 2, edge.color = edgecol, edge.width = 0.8, curve = 0.3, curveAll = T, label.color = "black", legend.cex = 1.2, asize= 4, layout = manual_layout, fade = FALSE)
