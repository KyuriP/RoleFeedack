scale_fill_brewer(palette = "Dark2", labels = c("t = 2000", "t = 3000")) +
scale_color_brewer(palette = "Dark2") +
theme_bw() +
theme(legend.position = "top",
legend.title = element_blank(),
text = element_text(size = 20, family="Palatino"),
axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -0.75),
plot.margin = margin(1, 2, 1, 1, "cm"))
## Adding overarching label for the facets
# Labels
labelT = "Number of feedback loop"
# Get the ggplot grob
z <- ggplotGrob(p2)
# Get the positions of the strips in the gtable: t = top, l = left, ...
posT <- subset(z$layout, grepl("strip-t", name), select = t:r)
# Get the positions of the strips in the gtable: t = top, l = left, ...
posT <- subset(z$layout, grepl("strip-t", name), select = t:r)
# Add a new column to the right of current right strips,
# and a new row on top of current top strips
height <- z$heights[min(posT$t)]  # height of current top strips
z <- gtable_add_rows(z, height, min(posT$t)-1)
# Construct the new strip grobs
stripT <- gTree(name = "Strip_top", children = gList(
rectGrob(gp = gpar(col = NA, fill = "grey85")),
textGrob(labelT, gp = gpar(fontsize = 10, col = "black"))))
# Position the grobs in the gtable
z <- gtable_add_grob(z, stripT, t = min(posT$t), l = min(posT$l), r = max(posT$r), name = "strip-top")
# Add small gaps between strips
z <- gtable_add_rows(z, unit(1/5, "line"), min(posT$t))
# Draw it
grid.newpage()
grid.draw(z)
## Adding overarching label for the facets
# Labels
labelT = "Number of feedback loop"
# Get the ggplot grob
z <- ggplotGrob(p2)
# Get the positions of the strips in the gtable: t = top, l = left, ...
posT <- subset(z$layout, grepl("strip-t", name), select = t:r)
# Add a new column to the right of current right strips,
# and a new row on top of current top strips
height <- z$heights[min(posT$t)]  # height of current top strips
z <- gtable_add_rows(z, height, min(posT$t)-1)
# Construct the new strip grobs
stripT <- gTree(name = "Strip_top", children = gList(
rectGrob(gp = gpar(col = NA, fill = "grey85")),
textGrob(labelT, gp = gpar(fontsize = 15, col = "black", fontfamily = "Palatino"))))
# Position the grobs in the gtable
z <- gtable_add_grob(z, stripT, t = min(posT$t), l = min(posT$l), r = max(posT$r), name = "strip-top")
# Add small gaps between strips
z <- gtable_add_rows(z, unit(1/5, "line"), min(posT$t))
# Draw it
grid.newpage()
grid.draw(z)
# Add a new column to the right of current right strips,
# and a new row on top of current top strips
height <- z$heights[min(posT$t)]  # height of current top strips
z <- gtable_add_rows(z, height, min(posT$t)-1)
# Construct the new strip grobs
stripT <- gTree(name = "Strip_top", children = gList(
rectGrob(gp = gpar(col = NA, fill = "grey85")),
textGrob(labelT, gp = gpar(fontsize = 15, col = "black", fontfamily = "Palatino", fontface = "bold"))))
# Position the grobs in the gtable
z <- gtable_add_grob(z, stripT, t = min(posT$t), l = min(posT$l), r = max(posT$r), name = "strip-top")
# Add small gaps between strips
z <- gtable_add_rows(z, unit(1/5, "line"), min(posT$t))
# Draw it
grid.newpage()
grid.draw(z)
## Adding overarching label for the facets
# Labels
labelT = "Number of feedback loop"
# Get the ggplot grob
z <- ggplotGrob(p2)
# Get the positions of the strips in the gtable: t = top, l = left, ...
posT <- subset(z$layout, grepl("strip-t", name), select = t:r)
# Add a new column to the right of current right strips,
# and a new row on top of current top strips
height <- z$heights[min(posT$t)]  # height of current top strips
z <- gtable_add_rows(z, height, min(posT$t)-1)
# Construct the new strip grobs
stripT <- gTree(name = "Strip_top", children = gList(
rectGrob(gp = gpar(col = "black", fill = "grey85")),
textGrob(labelT, gp = gpar(fontsize = 15, col = "black", fontfamily = "Palatino", fontface = "bold"))))
# Position the grobs in the gtable
z <- gtable_add_grob(z, stripT, t = min(posT$t), l = min(posT$l), r = max(posT$r), name = "strip-top")
# Add small gaps between strips
z <- gtable_add_rows(z, unit(1/5, "line"), min(posT$t))
# Draw it
grid.newpage()
grid.draw(z)
## Adding overarching label for the facets
# Labels
labelT = "Number of feedback loop"
# Get the ggplot grob
z <- ggplotGrob(p2)
# Get the positions of the strips in the gtable: t = top, l = left, ...
posT <- subset(z$layout, grepl("strip-t", name), select = t:r)
# Add a new column to the right of current right strips,
# and a new row on top of current top strips
height <- z$heights[min(posT$t)]  # height of current top strips
z <- gtable_add_rows(z, height, min(posT$t)-1)
# Construct the new strip grobs
stripT <- gTree(name = "Strip_top", children = gList(
rectGrob(gp = gpar(col = "black", fill = "grey85")),
textGrob(labelT, gp = gpar(fontsize = 15, col = "black", fontfamily = "Palatino", fontface = "italic"))))
# Position the grobs in the gtable
z <- gtable_add_grob(z, stripT, t = min(posT$t), l = min(posT$l), r = max(posT$r), name = "strip-top")
# Add small gaps between strips
z <- gtable_add_rows(z, unit(1/5, "line"), min(posT$t))
# Draw it
grid.newpage()
grid.draw(z)
## Adding overarching label for the facets
# Labels
labelT = "Number of feedback loop"
# Get the ggplot grob
z <- ggplotGrob(p2)
# Get the positions of the strips in the gtable: t = top, l = left, ...
posT <- subset(z$layout, grepl("strip-t", name), select = t:r)
# Add a new column to the right of current right strips,
# and a new row on top of current top strips
height <- z$heights[min(posT$t)]  # height of current top strips
z <- gtable_add_rows(z, height, min(posT$t)-1)
# Construct the new strip grobs
stripT <- gTree(name = "Strip_top", children = gList(
rectGrob(gp = gpar(col = "black", fill = "grey85")),
textGrob(labelT, gp = gpar(fontsize = 15, col = "black", fontfamily = "Palatino"))))
# Position the grobs in the gtable
z <- gtable_add_grob(z, stripT, t = min(posT$t), l = min(posT$l), r = max(posT$r), name = "strip-top")
# Add small gaps between strips
z <- gtable_add_rows(z, unit(1/5, "line"), min(posT$t))
# Draw it
grid.newpage()
grid.draw(z)
ggsave("figure/var_instrength.pdf", plot = z, width = 30, height = 30, units = "cm", dpi = 300)
## Adding overarching label for the facets
# Labels
labelT = "Number of feedback loop"
# Get the ggplot grob
z <- ggplotGrob(p2)
# Get the positions of the strips in the gtable: t = top, l = left, ...
posT <- subset(z$layout, grepl("strip-t", name), select = t:r)
# Add a new column to the right of current right strips,
# and a new row on top of current top strips
height <- z$heights[min(posT$t)]  # height of current top strips
z <- gtable_add_rows(z, height, min(posT$t)-1)
# Construct the new strip grobs
stripT <- gTree(name = "Strip_top", children = gList(
rectGrob(gp = gpar(col = "black", fill = "grey85")),
textGrob(labelT, gp = gpar(fontsize = 20, col = "black", fontfamily = "Palatino"))))
# Position the grobs in the gtable
z <- gtable_add_grob(z, stripT, t = min(posT$t), l = min(posT$l), r = max(posT$r), name = "strip-top")
# Add small gaps between strips
z <- gtable_add_rows(z, unit(1/5, "line"), min(posT$t))
# Draw it
grid.newpage()
grid.draw(z)
ggsave("figure/var_instrength.pdf", plot = z, width = 30, height = 30, units = "cm", dpi = 300)
source("~/Documents/Kyuri_P/PhD_UvA/RoleFeedback/dat_analysis.R")
source("~/Documents/Kyuri_P/PhD_UvA/RoleFeedback/dat_analysis.R")
grid.draw(z)
#p1 <-
dat |> filter(t != "t1500") |>
ggplot(aes(x = group, y = average_sum, fill= t, color = t)) +
geom_boxplot(width = .4,
outlier.alpha = 0.7,
outlier.size = 2,
outlier.shape = 21,
outlier.color = "white",
outlier.fill = NULL,
alpha = 0.3,
position = position_dodge(width = 0.6)) +
stat_summary(fun.y = median,
geom = 'line',
aes(group = t, color = t),
alpha = 0.25, linewidth = 5, linetype = 1,
show.legend = F) +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
# scale_fill_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3"),labels = c("t = 1500", "t = 2000", "t = 2500", "t = 3000")) +
# scale_colour_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3")) +
labs(x = "Number of feedback loop", y = "Average aggregated symptom level", fill = "") +
theme_pubr() +
guides(color = "none") +
theme(legend.position = "top",
text = element_text(size = 25, family="Palatino"),
axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -0.75),
plot.margin = margin(1, 2, 1, 1, "cm"))
#p1 <-
dat |> filter(t != "t1500") |>
ggplot(aes(x = group, y = average_sum, fill= t, color = t)) +
geom_boxplot(width = .4,
outlier.alpha = 0.7,
outlier.size = 2,
outlier.shape = 21,
outlier.color = "white",
outlier.fill = NULL,
alpha = 0.3,
position = position_dodge(width = 0.6)) +
geom_jitter(alpha = .2) +
# stat_summary(fun.y = median,
#               geom = 'line',
#               aes(group = t, color = t),
#              alpha = 0.25, linewidth = 5, linetype = 1,
#              show.legend = F) +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
# scale_fill_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3"),labels = c("t = 1500", "t = 2000", "t = 2500", "t = 3000")) +
# scale_colour_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3")) +
labs(x = "Number of feedback loop", y = "Average aggregated symptom level", fill = "") +
theme_pubr() +
guides(color = "none") +
theme(legend.position = "top",
text = element_text(size = 25, family="Palatino"),
axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -0.75),
plot.margin = margin(1, 2, 1, 1, "cm"))
#p1 <-
dat |> filter(t != "t1500") |>
ggplot(aes(x = group, y = average_sum, fill= t, color = t)) +
geom_boxplot(width = .4,
outlier.alpha = 0.7,
outlier.size = 2,
outlier.shape = 21,
outlier.color = "white",
outlier.fill = NULL,
alpha = 0.3,
position = position_dodge(width = 0.6)) +
geom_jitter(alpha = .2, width = 0.1) +
# stat_summary(fun.y = median,
#               geom = 'line',
#               aes(group = t, color = t),
#              alpha = 0.25, linewidth = 5, linetype = 1,
#              show.legend = F) +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
# scale_fill_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3"),labels = c("t = 1500", "t = 2000", "t = 2500", "t = 3000")) +
# scale_colour_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3")) +
labs(x = "Number of feedback loop", y = "Average aggregated symptom level", fill = "") +
theme_pubr() +
guides(color = "none") +
theme(legend.position = "top",
text = element_text(size = 25, family="Palatino"),
axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -0.75),
plot.margin = margin(1, 2, 1, 1, "cm"))
#p1 <-
dat |> filter(t != "t1500") |>
ggplot(aes(x = group, y = average_sum, fill= t, color = t)) +
geom_boxplot(width = .4,
outlier.alpha = 0.7,
outlier.size = 2,
outlier.shape = 21,
outlier.color = "white",
outlier.fill = NULL,
alpha = 0.3,
position = position_dodge(width = 0.6)) +
geom_point(alpha = .2) +
# stat_summary(fun.y = median,
#               geom = 'line',
#               aes(group = t, color = t),
#              alpha = 0.25, linewidth = 5, linetype = 1,
#              show.legend = F) +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
# scale_fill_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3"),labels = c("t = 1500", "t = 2000", "t = 2500", "t = 3000")) +
# scale_colour_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3")) +
labs(x = "Number of feedback loop", y = "Average aggregated symptom level", fill = "") +
theme_pubr() +
guides(color = "none") +
theme(legend.position = "top",
text = element_text(size = 25, family="Palatino"),
axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -0.75),
plot.margin = margin(1, 2, 1, 1, "cm"))
#p1 <-
dat |> filter(t != "t1500") |>
ggplot(aes(x = group, y = average_sum, fill= t, color = t)) +
geom_boxplot(width = .4,
outlier.alpha = 0.7,
outlier.size = 2,
outlier.shape = 21,
outlier.color = "white",
outlier.fill = NULL,
alpha = 0.3,
position = position_dodge(width = 0.6)) +
geom_point(alpha = .2, position = position_jitterdodge()) +
# stat_summary(fun.y = median,
#               geom = 'line',
#               aes(group = t, color = t),
#              alpha = 0.25, linewidth = 5, linetype = 1,
#              show.legend = F) +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
# scale_fill_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3"),labels = c("t = 1500", "t = 2000", "t = 2500", "t = 3000")) +
# scale_colour_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3")) +
labs(x = "Number of feedback loop", y = "Average aggregated symptom level", fill = "") +
theme_pubr() +
guides(color = "none") +
theme(legend.position = "top",
text = element_text(size = 25, family="Palatino"),
axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -0.75),
plot.margin = margin(1, 2, 1, 1, "cm"))
#p1 <-
dat |> filter(t != "t1500") |>
ggplot(aes(x = group, y = average_sum, fill= t, color = t)) +
geom_boxplot(width = .4,
outlier.alpha = 0.7,
outlier.size = 2,
outlier.shape = 21,
outlier.color = "white",
outlier.fill = NULL,
alpha = 0.3,
position = position_dodge(width = 0.6)) +
geom_point(alpha = .2, position = position_jitterdodge(width = 0.1)) +
# stat_summary(fun.y = median,
#               geom = 'line',
#               aes(group = t, color = t),
#              alpha = 0.25, linewidth = 5, linetype = 1,
#              show.legend = F) +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
# scale_fill_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3"),labels = c("t = 1500", "t = 2000", "t = 2500", "t = 3000")) +
# scale_colour_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3")) +
labs(x = "Number of feedback loop", y = "Average aggregated symptom level", fill = "") +
theme_pubr() +
guides(color = "none") +
theme(legend.position = "top",
text = element_text(size = 25, family="Palatino"),
axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -0.75),
plot.margin = margin(1, 2, 1, 1, "cm"))
?position_jitterdodge
#p1 <-
dat |> filter(t != "t1500") |>
ggplot(aes(x = group, y = average_sum, fill= t, color = t)) +
geom_boxplot(width = .4,
outlier.alpha = 0.7,
outlier.size = 2,
outlier.shape = 21,
outlier.color = "white",
outlier.fill = NULL,
alpha = 0.3,
position = position_dodge(width = 0.6)) +
geom_point(alpha = .2, position = position_jitterdodge(jitter.width = 0.1)) +
# stat_summary(fun.y = median,
#               geom = 'line',
#               aes(group = t, color = t),
#              alpha = 0.25, linewidth = 5, linetype = 1,
#              show.legend = F) +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
# scale_fill_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3"),labels = c("t = 1500", "t = 2000", "t = 2500", "t = 3000")) +
# scale_colour_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3")) +
labs(x = "Number of feedback loop", y = "Average aggregated symptom level", fill = "") +
theme_pubr() +
guides(color = "none") +
theme(legend.position = "top",
text = element_text(size = 25, family="Palatino"),
axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -0.75),
plot.margin = margin(1, 2, 1, 1, "cm"))
#p1 <-
dat |> filter(t != "t1500") |>
ggplot(aes(x = group, y = average_sum, fill= t, color = t)) +
geom_boxplot(width = .4,
outlier.alpha = 0.7,
outlier.size = 2,
outlier.shape = 21,
outlier.color = "white",
outlier.fill = NULL,
alpha = 0.3,
position = position_dodge(width = 0.6)) +
geom_point(alpha = .1, position = position_jitterdodge(jitter.width = 0.1)) +
# stat_summary(fun.y = median,
#               geom = 'line',
#               aes(group = t, color = t),
#              alpha = 0.25, linewidth = 5, linetype = 1,
#              show.legend = F) +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
# scale_fill_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3"),labels = c("t = 1500", "t = 2000", "t = 2500", "t = 3000")) +
# scale_colour_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3")) +
labs(x = "Number of feedback loop", y = "Average aggregated symptom level", fill = "") +
theme_pubr() +
guides(color = "none") +
theme(legend.position = "top",
text = element_text(size = 25, family="Palatino"),
axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -0.75),
plot.margin = margin(1, 2, 1, 1, "cm"))
#p1 <-
dat |> filter(t != "t1500") |>
ggplot(aes(x = group, y = average_sum, fill= t, color = t)) +
geom_boxplot(width = .4,
outlier.alpha = 0.7,
outlier.size = 2,
outlier.shape = 21,
outlier.color = "white",
outlier.fill = NULL,
alpha = 0.3,
position = position_dodge(width = 0.6)) +
geom_point(alpha = .1, position = position_jitterdodge(jitter.width = 0.2)) +
# stat_summary(fun.y = median,
#               geom = 'line',
#               aes(group = t, color = t),
#              alpha = 0.25, linewidth = 5, linetype = 1,
#              show.legend = F) +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
# scale_fill_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3"),labels = c("t = 1500", "t = 2000", "t = 2500", "t = 3000")) +
# scale_colour_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3")) +
labs(x = "Number of feedback loop", y = "Average aggregated symptom level", fill = "") +
theme_pubr() +
guides(color = "none") +
theme(legend.position = "top",
text = element_text(size = 25, family="Palatino"),
axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -0.75),
plot.margin = margin(1, 2, 1, 1, "cm"))
#p1 <-
dat |> filter(t != "t1500") |>
ggplot(aes(x = group, y = average_sum, fill= t, color = t)) +
geom_boxplot(width = .4,
outlier.alpha = 0.7,
outlier.size = 2,
outlier.shape = 21,
outlier.color = "white",
outlier.fill = NULL,
alpha = 0.3,
position = position_dodge(width = 0.6)) +
geom_point(alpha = .01, position = position_jitterdodge(jitter.width = 0.2)) +
# stat_summary(fun.y = median,
#               geom = 'line',
#               aes(group = t, color = t),
#              alpha = 0.25, linewidth = 5, linetype = 1,
#              show.legend = F) +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
# scale_fill_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3"),labels = c("t = 1500", "t = 2000", "t = 2500", "t = 3000")) +
# scale_colour_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3")) +
labs(x = "Number of feedback loop", y = "Average aggregated symptom level", fill = "") +
theme_pubr() +
guides(color = "none") +
theme(legend.position = "top",
text = element_text(size = 25, family="Palatino"),
axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -0.75),
plot.margin = margin(1, 2, 1, 1, "cm"))
#p1 <-
dat |> filter(t != "t1500") |>
ggplot(aes(x = group, y = average_sum, fill= t, color = t)) +
geom_boxplot(width = .4,
outlier.alpha = 0.7,
outlier.size = 2,
outlier.shape = 21,
outlier.color = "white",
outlier.fill = NULL,
alpha = 0.3,
position = position_dodge(width = 0.6)) +
geom_point(alpha = .1, position = position_jitterdodge(jitter.width = 0.2)) +
# stat_summary(fun.y = median,
#               geom = 'line',
#               aes(group = t, color = t),
#              alpha = 0.25, linewidth = 5, linetype = 1,
#              show.legend = F) +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
# scale_fill_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3"),labels = c("t = 1500", "t = 2000", "t = 2500", "t = 3000")) +
# scale_colour_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3")) +
labs(x = "Number of feedback loop", y = "Average aggregated symptom level", fill = "") +
theme_pubr() +
guides(color = "none") +
theme(legend.position = "top",
text = element_text(size = 25, family="Palatino"),
axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -0.75),
plot.margin = margin(1, 2, 1, 1, "cm"))
#p1 <-
dat |> filter(t != "t1500") |>
ggplot(aes(x = group, y = average_sum, fill= t, color = t)) +
geom_boxplot(width = .4,
outlier.alpha = 0.7,
outlier.size = 2,
outlier.shape = 21,
outlier.color = "white",
outlier.fill = NULL,
alpha = 0.3,
position = position_dodge(width = 0.6)) +
#geom_point(alpha = .1, position = position_jitterdodge(jitter.width = 0.2)) +
# stat_summary(fun.y = median,
#               geom = 'line',
#               aes(group = t, color = t),
#              alpha = 0.25, linewidth = 5, linetype = 1,
#              show.legend = F) +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Set2") +
# scale_fill_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3"),labels = c("t = 1500", "t = 2000", "t = 2500", "t = 3000")) +
# scale_colour_manual(values = c("darkolivegreen", "orange2", "lightskyblue4", "indianred3")) +
labs(x = "Number of feedback loop", y = "Average aggregated symptom level", fill = "") +
theme_pubr() +
guides(color = "none") +
theme(legend.position = "top",
text = element_text(size = 25, family="Palatino"),
axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -0.75),
plot.margin = margin(1, 2, 1, 1, "cm"))
source("~/Documents/Kyuri_P/PhD_UvA/RoleFeedback/dat_analysis.R")
